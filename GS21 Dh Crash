--getgenv().Active = true --Toggle true or false
--getgenv().CrashAmmount = 1500 --The more you add the better
-- Theres a chance that the crash fails, if that happends just re execute and
-- add more to CrashAmmount
--[[  Requirements:
      Any PC, 5 minutes, account has to be in a group (it doesnt matter the group)
]]

do return(function(rf,mf,bf,of,uf,pf,Jf,Zf,Df,ef,Xf,Lf,Cf,xf,jf,Af,Tf,Gf,Vf,Rf,nf,Qf,If,Sf,df,Kf,sf,zf,Pf,Nf,cf,Mf,gf,kf,tf,wf,af,Wf,vf,qf,lf,...)local O=select;local Y,h,yI=pcall,tostring,(2);local F,s,f,q,V=nil,nil,nil,nil,(nil);while yI<=4 do if not(yI<=1)then if not(yI<=0X2)then do if yI==3 then s=Xf;yI=1;else q=Wf;do yI=0;end;end;end;else do F=string.sub;end;yI=3;end;elseif yI~=0X0 then f=string.char;do yI=4;end;else V=(rf or bit32);yI=0x00005;end;end;local T=({[lf]=0x1});local L={[0X00001]=0X008,[0X6]=2,[4]=0X1,[3]=0X3,[8]=1,[0X8]=0X00005,[0]=2,[Df]=9,[0X5]=0X04,[0X2]=9,[0x7]=3,[8]=0X5};yI=1;local X,r=nil,nil;do while 0.17917090688243964 do do if yI~=0X00 then do X=wf.gsub;end;do yI=0X0;end;else r=Zf;break;end;end;end;end;local S=q-0X00001;local d,P=nil,nil;local l=sf;local z=zf.yield;local E,Z=tonumber,(next);for m0=0X00000,0X1 do if m0==0 then delse P=1;end;end;local g=unpack or gf.unpack;yI=0X000;local b=nil;while yI<0X2 do if yI~=0X00000 then do b=Af;end;yI=2;else yI=1;end;end;local U=wf.byte;local x=(b and b()or _ENV);do yI=0X0;end;local B,Yf,i,I,m,k=nil,nil,nil,nil,nil,(nil);do repeat if not(yI<=0X0002)then do if yI<=4 then do if yI==3 then Yf=function(...)return O(bf,...),{...};end;yI=4;else do i=xf;end;yI=0X1;end;end;else if yI~=0X5 then do d=X(F(d,5),"\046\046",function(zD)if U(zD,0X00002)~=72 then local sh=f(E(zD,0X010));do if not(I)then return sh;else local YO=(B(sh,I));local PO=(0X0001);repeat if PO~=0X0 then I=nil;do PO=0;end;else return YO;end;until(false);end;end;else local la=0;while'\087\115\'gX\037\097\122'do if la==0x0 then I=E(F(zD,0x1,0X0001));la=1;else do return"";end;end;end;end;end);end;yI=5;else m=function()local oF=(nil);local gF=1;do repeat do if not(gF<=0)then if gF~=1 then return oF;else oF=U(d,P,P);gF=0;end;else P=P+0x0001;gF=2;end;end;until false;end;end;yI=2;end;end;end;else do if yI<=0 then B=wf.rep;do yI=3;end;else if yI==0x1 then yI=0X6;else k=2147483648;break;end;end;end;end;until false;end;local H,w=type,rawset;yI=0X01;local D,K=nil,nil;repeat if yI~=0X0 then D=Pf;do yI=0;end;else K=function()local ax,Rx,wx,Jx=U(d,P,P+3);P=P+0X4;return Jx*df+wx*If+Rx*0X100+ax;end;do yI=2;end;end;until yI>=2;local v=k-1;yI=6;local M,G,u,o,W,a=nil,nil,nil,nil,nil,nil;while yI~=0X7 do if yI<=2 then do if not(yI<=0x0)then if yI==1 then o={[0]={[0]=0X0,mf,Kf,0X3,4,0x5,6,7,0X8,kf,0Xa,11,0xC,13,14,15},{[0x0]=0X00001,0,3,0X0002,0X05,4,7,6,9,0x08,11,0XA,0X00d,0X0c,qf,14},{[0X0]=0X2,0x03,0x0,mf,0X006,0X7,0X4,5,10,11,8,9,14,15,12,13},{[0X00000]=0X3,2,mf,0,7,0x00006,0X5,0X4,Mf,0Xa,kf,Sf,15,0X0000E,13,0Xc},{[0x0]=4,5,6,0x7,0X0000,1,0x2,0x3,0X0c,0x000d,0X000E,qf,0x8,9,0XA,11},{[0X0]=0x5,4,0X7,0X06,0X00001,0,3,2,vf,Tf,0xf,14,9,8,0Xb,10},{[0X0000]=6,0X7,4,Gf,2,Df,0X0,1,0X0000e,0XF,0x000C,0XD,10,11,Sf,0X9},{[0]=0x00007,0X00006,0X5,0X00004,3,Kf,1,0,0Xf,0X000E,13,0xC,0Xb,10,0X9,0X08},{[0x0]=0X008,0X9,10,0xB,12,0XD,14,15,0,0X00001,0X02,0X03,4,5,0x00006,0X00007},{[0X0]=9,8,Mf,10,13,0XC,15,nf,0X1,0X00,3,2,0X5,uf,7,6},{[0X0000]=10,11,8,0X9,nf,15,12,13,0X2,3,0x0,0X1,6,0X7,0x4,5},{[0]=11,10,0X09,0X8,15,14,0xD,0xC,3,2,0X1,0x0,7,6,5,4},{[lf]=0Xc,13,0XE,0X000f,0x8,9,0X0000a,0x000b,uf,0X5,af,of,0X00000,0X1,0x2,0X3},{[0]=13,12,0XF,14,0X9,8,11,0x0000A,0X05,4,0X7,af,0X001,0x0,Df,2},{[0X00]=0X0E,15,0X00c,13,0XA,0XB,0X00008,9,6,7,0x04,0x05,0X2,0X00003,0X0000,1},{[0]=0X000F,14,13,0xc,11,0X0000A,0X09,Sf,7,0X6,5,0x04,0X3,Kf,1,0}};do yI=5;end;else a=function()local bZ,IZ,wZ,nZ,UZ,dZ,sZ=0x4,nil,nil,nil,nil,nil,(nil);repeat do if not(bZ<=0x2)then do if not(bZ<=4)then if bZ~=0X5 then UZ=G(wZ,20,0X0b);bZ=0X0001;else nZ=(-0X1)^G(wZ,0X00001f,1);bZ=6;end;else if bZ~=0X3 then IZ=K();bZ=0;else sZ=G(wZ,0,Cf)*q+IZ;bZ=0x07;end;end;end;else if not(bZ<=0X0)then if bZ==0x01 then dZ=0x1;bZ=3;else if not(IZ==0 and wZ==0X0)then else return 0X0;end;bZ=5;end;else wZ=K();do bZ=2;end;end;end;end;until bZ>=7;do if UZ==lf then if sZ==0X000 then return nZ*0x0;else local Y6=0X0;repeat if Y6==0 then UZ=0X1;Y6=1;else dZ=0X0;Y6=2;end;until Y6>0x1;end;else if UZ~=2047 then else if sZ==0X0 then return nZ*(0/0X0);else return nZ*(0X00001/0X0);end;end;end;end;return nZ*(2^(UZ-0X003Ff))*(sZ/M+dZ);end;do yI=0X7;end;end;else M=2^52;yI=4;end;end;else do if yI<=4 then if yI~=0X3 then G=function(xd,fd,Fd)local zd=((xd/T[fd])%T[Fd]);zd=zd-zd%0X1;do return zd;end;end;yI=3;else do u=function()local f8,p8=K(),K();if p8>=k then p8=p8-q;end;return p8*q+f8;end;end;yI=1;end;elseif yI==0x5 then W=Vf;yI=2;else do local H0=2;for v8=1,31 do(T)[v8]=H0;do H0=H0*0x2;end;end;end;yI=0X0;end;end;end;end;local C=V and V[ef]or function(G5,K5)local g5=(0X0);local b5,f5=nil,(nil);while 0.7469169863930563 do if g5<=2 then if not(g5<=0)then if g5==0x1 then K5=K5%q;g5=0X5;else while G5>lf and K5>0 do local Vs,bs=nil,(nil);for qL=0,0X5 do do if not(qL<=2)then do if not(qL<=0X3)then if qL==0X4 then K5=(K5-bs)/0X000010;else f5=f5*16;end;else G5=(G5-Vs)/16;end;end;else do if qL<=0 then Vs=G5%tf;else do if qL==1 then do bs=K5%0X10;end;else b5=b5+o[Vs][bs]*f5;end;end;end;end;end;end;end;end;do g5=0x3;end;end;else G5=G5%q;do g5=0x1;end;end;else if not(g5<=0X3)then if g5~=0X4 then b5=0X0;g5=0X4;else f5=1;g5=2;end;else return b5+G5*f5+K5*f5;end;end;end;end;local e=(V and V.band or function(Bg,Hg)local Zg=(0X1);do while"\0930\032-\039Zg\042M"do if Zg<=0X0 then return((Bg+Hg)-C(Bg,Hg))/0x00002;else do if Zg==1 then do Bg=Bg%q;end;Zg=2;else Hg=Hg%q;Zg=0X0;end;end;end;end;end;end);local t=(V and V.bor or function(h7,C7)h7=h7%q;do C7=C7%q;end;return S-e(S-h7,S-C7);end);local j,Q,c=V and V.bnot or function(Qg)return S-(Qg%q);end,V and V.lshift,(V and V.rshift);yI=0;local y=(nil);do while yI~=0X3 do if not(yI<=0x0)then if yI~=1 then y=jf;yI=1;else c=c or function(Hn,zn)do if not(zn>=32)then else return 0;end;end;local Tn=(nil);for jr=0,0X2 do if not(jr<=0x0000)then if jr~=0X1 then do return Tn-Tn%0X1;end;else Tn=(Hn%q/T[zn]);end;else do if zn<0 then return Q(Hn,-zn);end;end;end;end;end;yI=0x3;end;else Q=Q or function(R4,N4)do if N4>=0X20 then do return lf;end;end;end;do for dB=0,0X1 do if dB~=0 then do return(R4*T[N4])%q;end;else if N4<0X0 then do return c(R4,-N4);end;end;end;end;end;end;do yI=0X2;end;end;end;end;local A=setfenv;local N=function()local At=0;local Lt=0;do repeat local Yt=(U(d,P,P));P=P+0X01;Lt=t(Lt,Q(e(Yt,127),At));if e(Yt,128)==0 then return Lt;end;At=At+0X7;until false;end;end;local J=(m());local R={0X4,0X6,7};local yf=(m());local Of,hf,p,Ef,Hf,Ff,Uf,ff,Bf=nil,nil,nil,nil,nil,nil,nil,nil,(nil);do for YY=0X000,12 do if not(YY<=5)then if not(YY<=8)then if not(YY<=10)then if YY~=11 then do return Uf(Rf,x,Bf)(...);end;else Hf=nil;end;else do if YY~=0X9 then(Ff)[2]=Hf;else Bf=ff();end;end;end;else if YY<=0x6 then else if YY==0X0007 then function Uf(bM,pM,vM)local FM=vM[0X0008];local gM,OM,iM=vM[0X2],vM[5],vM[9];local xM,QM=vM[1],vM[0x3];local sM=vM[7];local JM=(D({},{__mode="v"}));local PM,rM=vM[0X6],(nil);rM=function(...)local uM=0x0;local nM={};local cM=((b and b()or _ENV));local NM,jM=Yf(...);NM=NM-0X01;for iF=0X00,NM do do if sM>iF then nM[iF]=jM[iF+0X1];else do break;end;end;end;end;Ff[0x3]=vM;local CM=(cM==x and pM or cM);do Ff[4]=nM;end;if not iM then jM=nil;else if not(FM)then else(nM)[sM]={n=NM>=sM and NM-sM+1 or 0,g(jM,sM+0X01,NM+0X1)};end;end;local XM=(0x1);if CM==cM then else do if not(A)then _ENV=CM;else(A)(rM,CM);end;end;end;local tM,ZM,oM,LM=Y(function()repeat local aY=(xM[XM]);local RY=(aY[5]);XM=XM+0x1;if not(RY<0x2e)then if not(RY<0X45)then if not(RY>=0x50)then if RY<74 then do if RY<0X47 then if RY==70 then local FC=aY[4];do uM=FC+aY[7]-1;end;do nM[FC]=nM[FC](g(nM,FC+1,uM));end;uM=FC;else local z2=aY[7];local O2=nM[z2];for aZ=z2+1,aY[0X6]do O2=O2..nM[aZ];end;(nM)[aY[4]]=O2;end;else if not(RY<0X48)then do if RY==73 then local H3=aY[4];local e3,k3,j3=nM[H3]();if not(e3)then else nM[H3+1]=k3;nM[H3+2]=j3;XM=aY[0X00007];end;else local q7=aY[4];local B7,w7,N7=nM[q7],nM[q7+0x1],(nM[q7+0x0002]);nM[q7]=s(function()do for b_=B7,w7,N7 do z(true,b_);end;end;end);XM=aY[0x7];end;end;else do if not(nM[aY[0X7]]<=nM[aY[0X06]])then else XM=aY[0X4];end;end;end;end;end;else if not(RY>=77)then if not(RY>=75)then(nM)[aY[0X4]]=j(nM[aY[0X07]]);else if RY~=76 then do(nM)[aY[0X4]]={};end;else nM[aY[0X4]]=nM[aY[0x7]]-nM[aY[6]];end;end;else do if not(RY>=78)then(nM)[aY[4]]=Q(nM[aY[0X007]],nM[aY[6]]);else if RY==79 then do nM[aY[4]][nM[aY[7]]]=nM[aY[0X6]];end;else(nM)[aY[4]]={g({},0X1,aY[7])};end;end;end;end;end;else if RY<0X056 then if not(RY>=83)then if not(RY>=0x00051)then if nM[aY[7]]~=aY[0X2]then else XM=aY[4];end;else if RY~=82 then do(Ff)[aY[7]]=nM[aY[4]];end;else local G2=bM[aY[7]];(G2[0x00001])[G2[2]]=nM[aY[0X0004]];end;end;else if RY<0X54 then local Ej=aY[4];(nM)[Ej]=nM[Ej](nM[Ej+1],nM[Ej+2]);uM=Ej;else if RY~=85 then nM[aY[0X4]]=nM[aY[0X7]]~=aY[2];else if not(not(nM[aY[7]]<=aY[2]))then else do XM=aY[0x4];end;end;end;end;end;else if RY>=89 then do if not(RY<90)then if RY~=0x5B then local BF=(aY[0X4]);local kF,uF=nM[BF]();do if not(kF)then else XM=aY[0X7];(nM)[BF+0X3]=uF;end;end;else do if not(nM[aY[0x007]]<=nM[aY[6]])then XM=aY[4];end;end;end;else if nM[aY[0X07]]~=nM[aY[0X0006]]then XM=aY[4];end;end;end;else if RY<87 then(CM)[aY[0x0003]]=nM[aY[4]];else if RY==88 then nM[aY[0X004]]=true;else local NR,dR=aY[4],nM[aY[7]];nM[NR+0X001]=dR;do nM[NR]=dR[aY[0x2]];end;end;end;end;end;end;else if RY<57 then if not(RY>=51)then if RY<48 then if RY==47 then(nM)[aY[0x0004]]=c(nM[aY[0X07]],nM[aY[0X006]]);else local zm=(nM[aY[0X7]]/nM[aY[6]]);(nM)[aY[4]]=zm-zm%0X01;end;else if RY>=0X31 then do if RY~=50 then nM[aY[0X004]]=t(nM[aY[0x7]],nM[aY[0X006]]);else local Td=(aY[4]);for Vt=Td,Td+(aY[0X7]-1)do nM[Vt]=jM[sM+(Vt-Td)+1];end;end;end;else nM[aY[4]]=-nM[aY[7]];end;end;else if RY<0X36 then if not(RY>=52)then if aY[6]==0x001e then XM=XM-1;(xM)[XM]={[0x07]=(aY[0X7]-27),[5]=21,[4]=(aY[0X4]-0X0001B)};else for Qy=aY[0x0004],aY[0X07]do do nM[Qy]=nil;end;end;end;else if RY==53 then uM=aY[0x0004];do(nM)[uM]=nM[uM]();end;else local kT=QM[aY[7]];local mT=kT[4];local oT,aT=#mT,nil;if oT>0 then aT={};for g1=0X00001,oT do local k1=(mT[g1]);if k1[0X1]==0X0 then aT[g1-1]={nM,k1[0X2]};else do(aT)[g1-0X1]=bM[k1[2]];end;end;end;r(JM,aT);end;(nM)[aY[4]]=Uf(aT,CM,kT);end;end;else if not(RY<55)then if RY==0X00038 then nM[aY[4]]=nM[aY[0X7]]%nM[aY[0x06]];else nM[aY[0X4]][aY[0X03]]=nM[aY[0x6]];end;else local fB=(aY[0X7]);nM[aY[4]]=nM[fB]..nM[fB+0X0001];end;end;end;else if not(RY<63)then if not(RY>=0X000042)then if RY>=0X40 then if RY~=0X41 then(nM)[aY[0X4]]=C(nM[aY[7]],nM[aY[6]]);else nM[aY[4]]=false;end;else nM[aY[4]]=Ff[aY[0X7]];end;else if not(RY<0X0043)then do if RY==68 then if aY[6]==227 then XM=XM-1;(xM)[XM]={[0X4]=(aY[4]-0X9B),[5]=0x0018,[0X0007]=(aY[0X7]-0X9b)};else repeat local PK,xK=JM,nM;if#PK>0X00 then local Ec={};for FV,jV in Z,PK do for O_,s_ in Z,jV do if not(s_[0X1]==xK and s_[0x2]>=0X0)then else local M9=s_[2];if not(not Ec[M9])then else Ec[M9]={xK[M9]};end;(s_)[1]=Ec[M9];(s_)[0X0002]=0X1;end;end;end;end;until true;do return false,aY[4],uM;end;end;else local H7=(aY[0X004]);local f7=(s(function(...)z();for NO,OO,KO,MO,xO,DO,XO,eO,vO,fO in...do z(true,{NO,OO,KO,MO,xO,DO,XO,eO,vO,fO});end;end));(f7)(nM[H7],nM[H7+1],nM[H7+0X2]);do uM=H7;end;nM[H7]=f7;XM=aY[0X7];end;end;else nM[aY[4]]=nM[aY[0X7]]^nM[aY[0X6]];end;end;else if RY>=60 then if not(RY>=61)then local BD=(aY[0X4]);(nM[BD])(g(nM,BD+0X1,uM));uM=BD-0X001;else if RY~=0X3e then if aY[0X6]==0X0058 then do XM=XM-0X1;end;(xM)[XM]={[4]=(aY[0X4]-148),[0X7]=(aY[0X7]-148),[0x5]=21};elseif aY[0x00006]~=217 then repeat local rG,xG,dG=JM,nM,(aY[0x4]);do if not(#rG>0)then else local u9=({});for KY,fY in Z,rG do for fX,nX in Z,fY do if nX[0X00001]==xG and nX[0x2]>=dG then local bF=(nX[0X02]);if not(not u9[bF])then else(u9)[bF]={xG[bF]};end;nX[1]=u9[bF];(nX)[0X02]=0X1;end;end;end;end;end;until true;else XM=XM-1;xM[XM]={[5]=0X15,[0X7]=(aY[0x7]-176),[4]=(aY[0X4]-176)};end;else local Zk=(aY[0x4]);local Gk=(s(function(...)z();do for AR,ER in...do z(true,AR,ER);end;end;end));Gk(nM[Zk],nM[Zk+0x1],nM[Zk+0x00002]);do uM=Zk;end;nM[Zk]=Gk;XM=aY[0x7];end;end;else if not(RY<0X0003A)then if RY~=0X3b then if not(not(nM[aY[0X7]]<nM[aY[0X6]]))then else do XM=aY[0x004];end;end;else(nM)[aY[4]]=aY[3];end;else do nM[aY[0X4]]=nM[aY[0X7]]<=nM[aY[6]];end;end;end;end;end;end;else if not(RY<23)then do if not(RY>=0X22)then if not(RY<28)then do if not(RY>=0x1F)then do if not(RY<29)then do if RY~=0X1E then do if aY[0X6]==207 then XM=XM-0x01;xM[XM]={[0X4]=(aY[0x4]-0X15),[7]=(aY[0X0007]-0X015),[0x0005]=0X00016};else do nM[aY[4]]=not nM[aY[7]];end;end;end;else nM[aY[0X4]][aY[0X00003]]=aY[0x2];end;end;else local sw=aY[0X4];nM[sw](nM[sw+0X1],nM[sw+0X02]);uM=sw-1;end;end;else if not(RY<0X20)then if RY~=33 then(nM)[aY[0X00004]]=nM[aY[7]]<nM[aY[6]];else nM[aY[0X4]]=nM[aY[7]]+nM[aY[6]];end;else if nM[aY[7]]<nM[aY[0X0006]]then XM=aY[4];end;end;end;end;else do if not(RY>=25)then if RY==0X18 then repeat local St,It=JM,nM;do if not(#St>0)then else local Hn={};do for Wi,ai in Z,St do for I3,F3 in Z,ai do if F3[1]==It and F3[2]>=0X000 then local Vc=(F3[0X2]);if not Hn[Vc]then do Hn[Vc]={It[Vc]};end;end;(F3)[1]=Hn[Vc];do(F3)[2]=0X001;end;end;end;end;end;end;end;until true;local LR=(aY[4]);do return false,LR,LR+aY[0X7]-2;end;else(nM)[aY[4]]=nM[aY[0X00007]]==nM[aY[0x00006]];end;else if not(RY<0X1a)then if RY==0x1b then local iF=(bM[aY[7]]);(nM)[aY[0x4]]=iF[0X00001][iF[2]];else(nM)[aY[4]]=nM[aY[7]][nM[aY[6]]];end;else do(nM)[aY[0X4]]=nM[aY[7]]>=nM[aY[0X06]];end;end;end;end;end;else if RY>=40 then if RY>=43 then do if not(RY>=44)then repeat local LI,HI=JM,(nM);if not(#LI>0x00000)then else local uZ={};for wh,Sh in Z,LI do for ra,ha in Z,Sh do do if not(ha[1]==HI and ha[2]>=0X00)then else local o9=(ha[0x2]);if not(not uZ[o9])then else uZ[o9]={HI[o9]};end;do ha[1]=uZ[o9];end;(ha)[0X2]=1;end;end;end;end;end;until true;return true,aY[0X4],0x0000;else if RY==0X2D then local YP=aY[0x0004];do nM[YP]=nM[YP](g(nM,YP+1,uM));end;do uM=YP;end;else local tD=(aY[4]);local SD,qD=nM[tD]();if SD then nM[tD+1]=qD;do XM=aY[0X7];end;end;end;end;end;else if not(RY<0X29)then if RY~=42 then local A9,o9=aY[4],(aY[0X6]-1)*50;local T9=(nM[A9]);for Ir=1,uM-A9 do T9[o9+Ir]=nM[A9+Ir];end;else repeat local FD,SD=JM,(nM);if#FD>0X0 then local ok=({});for IM,AM in Z,FD do do for UD,cD in Z,AM do if not(cD[0x1]==SD and cD[0X2]>=0)then else local K_=cD[2];do if not(not ok[K_])then else do(ok)[K_]={SD[K_]};end;end;end;(cD)[0X1]=ok[K_];do cD[2]=1;end;end;end;end;end;end;until true;return true,aY[0X4],0X0001;end;else do if nM[aY[7]]==nM[aY[6]]then XM=aY[0X04];end;end;end;end;else if RY>=0X25 then if not(RY<0X000026)then if RY==0X27 then(nM)[aY[4]]=nM[aY[0X7]]~=nM[aY[0x6]];else do(nM)[aY[0X4]]=nM[aY[7]]%aY[0x00002];end;end;else(nM)[aY[0X4]]=e(nM[aY[7]],nM[aY[0x6]]);end;else do if not(RY>=35)then if aY[0x6]==0X37 then XM=XM-1;xM[XM]={[0x004]=(aY[0X004]-202),[0X7]=(aY[7]-0xCA),[0x005]=48};else nM[aY[0X4]]=nil;end;else if RY~=0X000024 then local t9,P9=aY[0X4],aY[7];if P9==0X0 then else do uM=t9+P9-1;end;end;local R9,u9,C9=nil,nil,(aY[6]);if P9~=0X1 then R9,u9=Yf(nM[t9](g(nM,t9+1,uM)));else R9,u9=Yf(nM[t9]());end;if C9==1 then uM=t9-1;else if C9==0 then do R9=R9+t9-0X1;end;uM=R9;else do R9=t9+C9-2;end;uM=R9+0X1;end;local th=0X00000;do for eH=t9,R9 do th=th+1;(nM)[eH]=u9[th];end;end;end;else local DE=(aY[0X0004]);do uM=DE+aY[7]-0X01;end;(nM[DE])(g(nM,DE+1,uM));uM=DE-0X1;end;end;end;end;end;end;end;else if RY>=11 then do if not(RY<0x11)then do if RY<0X14 then if RY>=18 then if RY==0X13 then do(nM)[aY[0x4]]=nM[aY[0X7]][aY[0X02]];end;else nM[aY[0X4]]=aY[3];end;else do(nM)[aY[4]]=nM[aY[7]]*nM[aY[6]];end;end;else if not(RY<0X15)then if RY~=22 then if aY[0X6]==0x89 then XM=XM-1;(xM)[XM]={[7]=(aY[0X0007]-0X8A),[4]=(aY[0X0004]-0X00008A),[5]=0x22};elseif aY[6]==251 then XM=XM-1;xM[XM]={[7]=(aY[0X7]-41),[0X00004]=(aY[0X004]-0X29),[0X5]=0X0A};else local uU=(aY[0X4]);local nU=NM-sM;do if nU<0 then nU=-0X1;end;end;for Xl=uU,uU+nU do nM[Xl]=jM[sM+(Xl-uU)+1];end;uM=uU+nU;end;else repeat local xb,Rb=JM,(nM);if not(#xb>0)then else local fS={};for nL,YL in Z,xb do do for iI,uI in Z,YL do do if uI[1]==Rb and uI[2]>=0 then local RX=uI[2];if not(not fS[RX])then else do(fS)[RX]={Rb[RX]};end;end;uI[0x1]=fS[RX];(uI)[0X2]=0X0001;end;end;end;end;end;end;until true;return;end;else local rI=aY[0X4];local tI,NI=nM[rI],((aY[0X6]-0x001)*0X0032);for Ij=1,aY[0X00007]do(tI)[NI+Ij]=nM[rI+Ij];end;end;end;end;else if RY<14 then if RY<0X0c then if aY[0X00006]~=108 then do if not nM[aY[4]]then do XM=aY[0X7];end;end;end;else XM=XM-0X1;do(xM)[XM]={[0x4]=(aY[0x004]-47),[5]=0X000016,[7]=(aY[7]-0X2f)};end;end;else if RY~=0X000D then do(nM)[aY[0x4]]=nM[aY[7]]/nM[aY[0x6]];end;else do(nM[aY[4]])[nM[aY[7]]]=aY[2];end;end;end;else if RY>=0Xf then if RY~=0x10 then uM=aY[4];(nM[uM])();uM=uM-1;else nM[aY[4]]=nM[aY[0X7]]-aY[0x2];end;else local Ly=(aY[4]);do nM[Ly]=nM[Ly](nM[Ly+0X1]);end;uM=Ly;end;end;end;end;else do if RY<0X5 then if RY>=2 then if not(RY<3)then if RY==0X0004 then local sE=aY[0X00004];local SE=s(function(...)(z)();for w7 in...do z(true,w7);end;end);(SE)(nM[sE],nM[sE+1],nM[sE+0X2]);uM=sE;nM[sE]=SE;do XM=aY[7];end;else local Hd=aY[0X0004];(nM[Hd])(nM[Hd+0X00001]);uM=Hd-1;end;else local td=aY[0X4];local hd,jd=nM[td]();do if not(hd)then else for Qg=0X1,aY[0X6]do nM[td+Qg]=jd[Qg];end;do XM=aY[7];end;end;end;end;else do if RY==0x0001 then local ke=aY[0X07];local Xe=aY[0X004];do uM=Xe+ke-1;end;repeat local QB,qB=JM,(nM);if#QB>0x0 then local Q_=({});for t4,w4 in Z,QB do for ER,mR in Z,w4 do do if mR[0X1]==qB and mR[0X002]>=0X0 then local Ei=(mR[0X02]);do if not(not Q_[Ei])then else Q_[Ei]={qB[Ei]};end;end;do mR[1]=Q_[Ei];end;do(mR)[0X002]=1;end;end;end;end;end;end;until true;return true,Xe,ke;else nM[aY[0x4]]=CM[aY[3]];end;end;end;else if not(RY<0X8)then if RY<0x9 then nM[aY[0X4]]=#nM[aY[0x7]];else if RY~=0X000a then XM=aY[7];else(nM)[aY[4]]=nM[aY[7]];end;end;else if RY>=0x6 then if RY==0X7 then do if nM[aY[7]]~=aY[2]then do XM=aY[4];end;end;end;else if nM[aY[0X4]]then XM=aY[0X07];end;end;else(nM)[aY[0X4]]=nM[aY[0x7]]>nM[aY[6]];end;end;end;end;end;end;end;until false;end);if tM then if ZM then if LM==1 then return nM[oM]();else return nM[oM](g(nM,oM+0X1,uM));end;else if not(oM)then else do return g(nM,oM,LM);end;end;end;else if H(ZM)~="string"then i(ZM,0x0);else if not(W(ZM,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(W(ZM,"^.-:%d+: "))then(i)(ZM,0);else(i)("Luraph Script:"..(OM[XM-1]or"(internal)").."\058 "..h(ZM),0);end;end;end;end;if A then(A)(rM,pM);end;return rM;end;else function ff()local fU,TU,oU,KU,HU,rU=nil,nil,nil,nil,nil,nil;local yU=0X005;while yU~=7 do if yU<=0X2 then if yU<=0X0 then oU={};yU=0X4;else if yU~=1 then do fU={};end;yU=0X6;else rU=TU[0x3];yU=0X00007;end;end;else if yU<=0x0004 then if yU==0X0003 then do HU={};end;yU=0X1;else KU=K()-0X000e693;do yU=0X3;end;end;else if yU==0x00005 then yU=2;else TU={{},Rf,{},nil,{},nil,nil,Rf,nil};yU=0X0;end;end;end;end;yU=0X02;local uU=(nil);do repeat if yU<=0X2 then if not(yU<=0)then if yU==1 then TU[19]=m();break;else for Pj=0X0,KU-0X1 do rU[Pj]=ff();end;yU=4;end;else uU=K();yU=5;end;else do if not(yU<=4)then if yU==0X0005 then do for qy=mf,uU do local Cy=(K());local fy,Ky,jy=1,nil,(nil);repeat do if fy<=0X0000 then jy=K();do fy=0X2;end;else if fy==1 then Ky=K();fy=0X0;else for fa=Cy,Ky do(TU[5])[fa]=jy;end;fy=0X0003;end;end;end;until fy>=3;end;end;yU=3;else do TU[0X6]=N();end;yU=0X00000;end;else if yU==0X03 then(TU)[11]=m();yU=0X001;else TU[10]=m();do yU=6;end;end;end;end;end;until false;end;yU=0X3;local iU,bU=nil,nil;while yU<0x04 do if yU<=0x1 then do if yU==0X0000 then(TU)[0X0008]=G(iU,2,1)~=0x0;yU=0X004;else bU=mf;do yU=2;end;end;end;else if yU==2 then do(TU)[9]=G(iU,1,1)~=lf;end;yU=0X0;else iU=m();yU=0X1;end;end;end;do yU=9;end;local LU,PU,tU,mU=nil,nil,nil,nil;while yU~=10 do do if yU<=0x4 then if not(yU<=0X001)then if not(yU<=2)then do if yU==0X00003 then do(TU)[0X2]=N();end;do yU=0X4;end;else TU[0X12]=K();do yU=0X0;end;end;end;else do for pY=0X1,LU do local eY=(Rf);local mY,UY,uY=0X0002,nil,(nil);while mY<=0X00003 do do if mY<=1 then if mY==0 then do uY={eY,{}};end;mY=4;else if UY==Nf then eY=u();elseif UY==17 then eY=a()+K();elseif UY==19 then do eY=true;end;elseif UY==87 then eY=a();elseif UY==0X0000f8 then eY=F(Ef(PU),2);elseif UY==pf then eY=F(Ef(PU),a()+K());elseif UY==0x0000F7 then eY=u();elseif UY==0X69 then eY=u();elseif UY==0X0000BD then eY=a();elseif UY~=0x00056 then else eY=Jf;end;mY=0X0;end;else if mY~=2 then HU[pY-0X00001]=bU;mY=0X01;else do UY=m();end;mY=3;end;end;end;end;oU[bU]=uY;do bU=bU+0X1;end;if not(tU)then else(Hf)[hf]=uY;hf=hf+mf;end;end;end;yU=0x3;end;else if yU==0 then TU[0x0004]=fU;yU=1;else for ll=0X01,N()do(fU)[ll]={m(),N()};end;do yU=0X08;end;end;end;elseif yU<=6 then do if yU~=0X0005 then tU=m()~=0;do yU=0x00002;end;else PU=m();do yU=6;end;end;end;else if not(yU<=7)then do if yU~=8 then LU=K()-Lf;yU=5;else TU[of]=N();do yU=0X0007;end;end;end;else mU=K()-0X0003d30;yU=10;end;end;end;end;local JU=TU[1];for aO=mf,mU do(JU)[aO]={[0X00005]=N(),[0X6]=p(),[0x3]=m(),[7]=p(),[0X02]=m(),[0X4]=p(),[0x1]=m()};end;for k9=0X1,mU do local L9=TU[1][k9];for fN,GN in ipairs(R)do local PN,HN,gN=0X2,nil,nil;do repeat if not(PN<=0)then do if PN==0X1 then do if gN==0X6 then local qL=(0X1);local yL=nil;local zL=(HU[L9[GN]]);while qL~=0X2 do if qL~=0X0 then yL=oU[zL];qL=0;else if yL then do L9[HN]=yL[0x0001];end;local Q8=0x0;local w8=nil;do while Q8~=0x002 do if Q8==0 then w8=yL[0x002];Q8=0X1;else(w8)[#w8+1]={L9,HN};Q8=2;end;end;end;end;qL=0X02;end;end;else if gN==13 then L9[GN]=k9+L9[GN]+1;end;end;end;break;else HN=L[GN];PN=0X00000;end;end;else do gN=L9[HN];end;PN=0X01;end;until false;end;end;end;return TU;end;end;end;end;else do if not(YY<=0X002)then if not(YY<=3)then if YY~=4 then Ff={};else Hf={};end;else Ef=function(FU)local UU,fU=nil,(nil);local MU=(0);while MU<=2 do if not(MU<=0X0)then if MU~=0X01 then for cP=0X00001,UU,7997 do local mP=cP+0x1F3d-1;if mP>UU then mP=UU;end;local JP,gP=2,nil;while(true)do if JP<=0 then for ZQ=1,#gP do do(gP)[ZQ]=C(gP[ZQ],J);end;J=(FU*J+25)%256;end;do JP=0X1;end;else if JP~=1 then gP={U(d,P+cP-1,P+mP-1)};JP=0X0;else fU=fU..f(g(gP));do break;end;end;end;end;end;MU=3;else fU=cf;do MU=2;end;end;else do UU=K();end;MU=1;end;end;do for Dg=0X0,1 do do if Dg==0X0 then P=P+UU;else return fU;end;end;end;end;end;end;else if YY<=0X000 then Of=function(Ax)local wx,mx,xx,Yx,fx,zx=0X1,nil,nil,nil,nil,nil;repeat if not(wx<=3)then if not(wx<=0X5)then do if wx~=0X6 then P=P+0X00004;wx=0X3;else Yx=C(mx[2],yf);do wx=0x005;end;end;end;else do if wx==4 then zx=C(mx[0X00004],yf);wx=2;else fx=C(mx[3],yf);wx=4;end;end;end;else if not(wx<=0X001)then if wx==0X2 then do yf=(0X000085*yf+Ax)%Qf;end;wx=0x7;else return zx*df+fx*65536+Yx*256+xx;end;else if wx==0 then xx=C(mx[1],yf);wx=0x6;else do mx={U(d,P,P+3)};end;do wx=0x0;end;end;end;end;until(false);end;else if YY==1 then hf=mf;else p=function()local Tp=N();local Rp=(0X0);while(true)do if Rp~=0 then do return Tp;end;else do if Tp>v then return Tp-q;end;end;Rp=1;end;end;end;end;end;end;end;end;end;end;end)(bit,1,"\035",7,0X4,0Xdc,false,table.insert,3,'\098\120o\114',coroutine.wrap,0x16F32,20,error,assert,getfenv,0xc,5,string.match,nil,14,256,0X10000,0X8,0X001000000,2,rawget,coroutine,setmetatable,0X000072,"",11,table,9,16,string,0x6,0x0000100000000,0Xd,0xf,0,...);end;
